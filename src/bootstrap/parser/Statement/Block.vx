import p from '@/util/parse.vx';

import @/parser/W.vx;

import ./DeferStatement.vx;

Block := p.Transform(
  p.Optional(p.Sequence([
    DeferStatement,
    p.Many(p.SequenceOne([
      [W.Optional],
      DeferStatement,
    ])),
  ])),
  func(result) {
    if (result:Length() == 0u64) {
      return ['block', []];
    }

    [[head, tail]] := result;

    return ['block', [head] ++ tail];
  },
);

return Block;
