return func Argument(target) {
  [type, data, _] := target;

  if (type == 'identifier') {
    if (target[1] != '_') { // TODO: Lack of short-circuit && strikes again!
      return [['create', target, {rightEvents: [], source: target}]];
    }
  }

  if (type in #['array', 'object']) {
    subArgs := switch (type) {
      'array' => data:map(Argument);
      'object' => data:map(func([_, subTarget]) => Argument(subTarget));
    };

    return ([[]] ++ subArgs):reduce(++);
  }

  return [];
};
