import ./Argument.vx;
import ./Block.vx;

return func([type, {name, args, body}, _]) {
  assert type == 'func';

  preEvents := [];

  if (name[0] != 'nothing') {
    preEvents ++= [['create', name, []]];
  }

  for (arg of args) {
    preEvents ++= Argument(arg);
  }

  events := Block(preEvents, body);
  extraEvents := [];

  len := events:Length();

  for (i := 0u64; i < len; i++) {
    if (events[i][0] == 'use') {
      events[i][0] = 'capture';
    } else if (events[i][0] == 'mutate') {
      extraEvents ++= [['capture', events[i][1]]];
    }
  }

  events ++= extraEvents;

  return events;
};
