import ./Program.vx;

assert Program(['13i8;']) == ['block', [
  ['expression',
    ['literal',
      13i8,
      [[0u64, 0u64], [0u64, 4u64]],
    ],
    [[0u64, 0u64], [0u64, 5u64]],
  ],
]];

if (0u8:String() == '0u8') {
  sampleLines := [
    ' 123u64; ',
    '',
    '500u8;',
    ' ',
    '  321u64; ',
    '[];',
  ];

  program := Program(sampleLines);

  assert program == ['block', [
    ['expression',
      ['literal',
        123u64,
        [[0u64, 1u64], [0u64, 7u64]],
      ],
      [[0u64, 1u64], [0u64, 8u64]],
    ],
    ['expression',
      ['note',
        {
          level: 'error',
          message: 'u8 overflow',
          pos: [[2u64, 0u64], [2u64, 5u64]],
          subotes: [],
          tags: #['parser', 'overflow'],
        },
        [[2u64, 0u64], [2u64, 5u64]],
      ],
      [[2u64, 0u64], [2u64, 6u64]],
    ],
    ['expression',
      ['literal',
        321u64,
        [[4u64, 2u64], [4u64, 8u64]],
      ],
      [[4u64, 2u64], [4u64, 9u64]],
    ],
    ['expression',
      ['array',
        [],
        [[5u64, 0u64], [5u64, 2u64]],
      ],
      [[5u64, 0u64], [5u64, 3u64]],
    ]
  ]];
}

return 'done';
