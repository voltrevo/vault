import @/util/canvasTree.vx;
import t2 from '@/util/transform2d.vx';
import @/util/trig.vx;

{App, Group, Transform, Poly} := canvasTree;

init := 0;

func reduce(state, action) => action[1].time;

unitSquare := Poly({
  points: [
    [-0.5, -0.5],
    [0.5, -0.5],
    [0.5, 0.5],
    [-0.5, 0.5],
    [-0.5, -0.5],
  ],
  style: {stroke: {color: 'white'}},
});

obj := Group([
  unitSquare,
  Transform(t2.Scale(1.5), unitSquare),
]);

object := obj;

func render(time) => {
  events: ['frame'],
  tree: Transform(
    [
      t2.identity,
      t2.Translation([0, trig.sin(2 * time) / 5]:Column()),
      t2.Translation([0.5, 0.5]:Column()),
      t2.Scale(0.2),
      t2.Rotation(time * 6.28 / 2),
    ]:reduce(t2.compose),
    object,
  ),
};

return App({init, reduce, render});
