TODO: Fix objectFnEdgeCase in bootstrapped validator
TODO: Test all of testCode against bootstrapped validator
TODO: Refactor leading and trailing unary operator joining into main unary joining
TODO: Fix unused index warning edge case
TODO: Use TypeValue comparison in switch matching
TODO: Implement maps with non-string keys in VM (keys can be any functionless value)
TODO: Implement frame guards / handle argument length mismatches
TODO: Bootstrap bytecoder
TODO: Speed up comparisons using structural sharing
TODO: Add exec command to vm to create nested vm from vortex byte array
TODO: Implement exception recovery / defaults
TODO: Bootstrap analyzer
TODO: Validator should call into Analyzer without waiting for complete context
TODO: Type system, type annotations, analysis (see typing in unsolved.txt)
TODO: More unused warnings via return value dependency analysis (see cirumventUnused.vx)

TODO: Lowest hanging fruit optimizations eg:
  { func { gcall 123 } call } => { gcall 123    }
  { [] 123 pushBack concat  } => { 123 pushBack }
  tail call optimization
  xget: move local variable onto stack
  xat : move variable at array/object index onto stack

TODO: Class syntax
TODO: TODO tagging, group based on tags
TODO: Fix vim plugin not knowing file path (fix @/imports/foo.vx)
TODO: Place import trace notes at lookup site rather than at import expression
TODO: Add tests for every possible note
TODO: Syntax to turn on analyzer notes for return value
TODO: Validation warning for variables that can be moved to an inner scope
TODO: String interpolation (e.g. '3 times 5 is {3 * 5}.')
TODO: Naming consistency module vs file
TODO: Cross-type comparison operators e.g. :<:
TODO: Finish defining packaging system, warn on unused files
TODO: Consider extending addition, subtraction, and matrix multiplication to inconsistent dimensions by (basically) assuming zeros (possibly use :+:, :*: etc)
TODO: Establish location indexing/linking so that caching the result of programs with equivalent syntax trees is possible
TODO: Spaceship operator <=>
TODO: Element-wise operators
TODO: enable {any x = 3;} for creation, which generalizes nicely to allow some names to be created by destructuring and not others: {[any x, y] = [1, 2]}
TODO: implement: if (foo := maybeFoo(); foo != null) { return foo; }
TODO: 0b 0x 0o literals (allow floats and e, e.g. 0b1.1e5 == 48 (what to do about e in hex?))
TODO: Implement TODO prioritization and sorting
TODO: Mechanism for removing TODO false positives
TODO: Variable/code references in comments (jsdoc?)
TODO: parser guessing
TODO: interactive debugger
TODO: super terse $ style lambdas: e.g. $ > 0 is func(x) => x > 0 (research similar constructs in existing languages)
TODO: define exactly what should/shouldn't be a valid identifier... js allows emojis, should vortex allow emojis?
TODO: Properly support unicode in strings, e.g. '☃️':Length() == 1u64 (currently 3u64 in VM (using chars))
TODO: rest/spread
